class Solution {
public:
    vector<int> GetLeastNumbers_Solution(vector<int> input, int k) {
        // 注意判断K
        vector<int> ans;
        if (k<=0 || k>input.size()){
            return ans;
        }
        ans = randomSelect(input,k);
        return ans;
    }
    // 随机划分
    int randomPartition(vector<int> &array,int l,int r){
        int x = rand()%(r-l+1)+l;
        swap(array[x],array[l]);
        int L = l,R = r;

        while(l<=r){
            while(l<=r && array[l]<=array[L]){
                l++;
            }
            while(l<=r && array[r]>=array[L]){
                r--;
            }
            /*
                // l <= r也可以
                if (l<r){
                    swap(array[l],array[r]);
                    l++;   // 这两个操作去掉也可以
                    r--;   // 这两个操作去掉也可以
                }
            */

            // 统一写法吧
            if (l<=r){
                swap(array[l],array[r]);
            }
        }
        swap(array[L],array[r]);
        return r;
    }
    // 随机选择
    vector<int> randomSelect(vector<int> &array,int k){
        int l=0,r=array.size()-1;
        while(true){
            int position = randomPartition(array,l,r);
            if (position + 1 == k){
                break;
            }else{
                if (position+1 > k){
                    r = position - 1;
                }else{
                    l = position + 1;
                }
            }
        }
        vector<int> ans;
        for (int i=0;i<k;i++){
            ans.push_back(array[i]);
        }
        return ans;
    }
};
/*
    总结
    1. 这题有多解法:
        (1) 排序再取，时间复杂度为O(nlogn)
        (2) 随机选择，时间复杂度O(n)
*/